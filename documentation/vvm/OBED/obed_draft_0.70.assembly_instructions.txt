[12:PREDICATE + INSTRUCTION] - INSTRUCTION SET (OPCODE BYTE VALUES TO BE DEFINED LATER)
	0000+0		- UADD64 [SOURCE] TO [SOURCE]
	0000+1		- UADD32 [SOURCE] TO [SOURCE]
	0000+2		- UADD16 [SOURCE] TO [SOURCE]
	0000+3		- UADD8 [SOURCE] TO [SOURCE]
	
	0000+4		- USUB64 [SOURCE] FROM [SOURCE]
	0000+5		- USUB32 [SOURCE] FROM [SOURCE]
	0000+6		- USUB16 [SOURCE] FROM [SOURCE]
	0000+7		- USUB8 [SOURCE] FROM [SOURCE]

	0000+8		- UMUL64 [SOURCE] BY [SOURCE]
	0000+9		- UMUL32 [SOURCE] BY [SOURCE]
	0000+10		- UMUL16 [SOURCE] BY [SOURCE]
	0000+11		- UMUL8 [SOURCE] BY [SOURCE]

	0000+12		- UDIV64 [SOURCE] BY [SOURCE]
	0000+13		- UDIV32 [SOURCE] BY [SOURCE]
	0000+14		- UDIV16 [SOURCE] BY [SOURCE]
	0000+15		- UDIV8 [SOURCE] BY [SOURCE]

	0000+16		- UCOMP64 [SOURCE] TO [SOURCE]
	0000+17		- UCOMP32 [SOURCE] TO [SOURCE]
	0000+18		- UCOMP16 [SOURCE] TO [SOURCE]
	0000+19		- UCOMP8 [SOURCE] TO [SOURCE]

	0000+20		- SADDF64 [SOURCE] TO [SOURCE]
	0000+21		- SADDF32 [SOURCE] TO [SOURCE]
	0000+22		- SADD64 [SOURCE] TO [SOURCE]
	0000+23		- SADD32 [SOURCE] TO [SOURCE]
	0000+24		- SADD16 [SOURCE] TO [SOURCE]
	0000+25		- SADD8 [SOURCE] TO [SOURCE]

	0000+26		- SSUBF64 [SOURCE] FROM [SOURCE]
	0000+27		- SSUBF32 [SOURCE] FROM [SOURCE]
	0000+28		- SSUB64 [SOURCE] FROM [SOURCE]
	0000+29		- SSUB32 [SOURCE] FROM [SOURCE]
	0000+30		- SSUB16 [SOURCE] FROM [SOURCE]
	0000+31		- SSUB8 [SOURCE] FROM [SOURCE]

	0000+32		- SMULF64 [SOURCE] BY [SOURCE]
	0000+33		- SMULF32 [SOURCE] BY [SOURCE]
	0000+34		- SMUL64 [SOURCE] BY [SOURCE]
	0000+35		- SMUL32 [SOURCE] BY [SOURCE]
	0000+36		- SMUL16 [SOURCE] BY [SOURCE]
	0000+37		- SMUL8 [SOURCE] BY [SOURCE]

	0000+38		- SDIVF64 [SOURCE] BY [SOURCE]
	0000+39		- SDIVF32 [SOURCE] BY [SOURCE]
	0000+40		- SDIV64 [SOURCE] BY [SOURCE]
	0000+41		- SDIV32 [SOURCE] BY [SOURCE]
	0000+42		- SDIV16 [SOURCE] BY [SOURCE]
	0000+43		- SDIV8 [SOURCE] BY [SOURCE]

	0000+44		- SCOMPF64 [SOURCE] TO [SOURCE]
	0000+45		- SCOMPF32 [SOURCE] TO [SOURCE]
	0000+46		- SCOMP64 [SOURCE] TO [SOURCE]
	0000+47		- SCOMP32 [SOURCE] TO [SOURCE]
	0000+48		- SCOMP16 [SOURCE] TO [SOURCE]
	0000+49		- SCOMP8 [SOURCE] TO [SOURCE]

	0000+50		- COPYF64 [SOURCE] TO [SOURCE]
	0000+51		- COPYF32 [SOURCE] TO [SOURCE]
	0000+52		- COPY64 [SOURCE] TO [SOURCE]
	0000+53		- COPY32 [SOURCE] TO [SOURCE]
	0000+54		- COPY16 [SOURCE] TO [SOURCE]
	0000+55		- COPY8 [SOURCE] TO [SOURCE]
	0000+56		- COPY8X [SOURCE, LENGTH] [SOURCE]			; EXTENDED COPY [LENGTH] BYTES OF DATA FROM [SOURCE] TO [SOURCE]

	0000+57		- MOVEF64 [SOURCE] TO [SOURCE]
	0000+58		- MOVEF32 [SOURCE] TO [SOURCE]
	0000+59		- MOVE64 [SOURCE] TO [SOURCE]
	0000+60		- MOVE32 [SOURCE] TO [SOURCE]
	0000+61		- MOVE16 [SOURCE] TO [SOURCE]
	0000+62		- MOVE8 [SOURCE] TO [SOURCE]

	0000+63		- XCHF64 [SOURCE] WITH [SOURCE]
	0000+64		- XCHF32 [SOURCE] WITH [SOURCE]
	0000+65		- XCH64 [SOURCE] WITH [SOURCE]
	0000+66		- XCH32 [SOURCE] WITH [SOURCE]
	0000+67		- XCH16 [SOURCE] WITH [SOURCE]
	0000+68		- XCH8 [SOURCE] WITH [SOURCE]

	0000+69		- XCHUADD64 [SOURCE] WITH [SOURCE]
	0000+70		- XCHUADD32 [SOURCE] WITH [SOURCE]
	0000+71		- XCHUADD16 [SOURCE] WITH [SOURCE]
	0000+72		- XCHUADD8 [SOURCE] WITH [SOURCE]

	0000+73		- XCHUMUL64 [SOURCE] WITH [SOURCE]
	0000+74		- XCHUMUL32 [SOURCE] WITH [SOURCE]
	0000+75		- XCHUMUL16 [SOURCE] WITH [SOURCE]
	0000+76		- XCHUMUL8 [SOURCE] WITH [SOURCE]

	0000+77		- XCHSADDF64 [SOURCE] WITH [SOURCE]
	0000+78		- XCHSADDF32 [SOURCE] WITH [SOURCE]
	0000+79		- XCHSADD64 [SOURCE] WITH [SOURCE]
	0000+80		- XCHSADD32 [SOURCE] WITH [SOURCE]
	0000+81		- XCHSADD16 [SOURCE] WITH [SOURCE]
	0000+82		- XCHSADD8 [SOURCE] WITH [SOURCE]

	0000+83		- XCHSMULF64 [SOURCE] WITH [SOURCE]
	0000+84		- XCHSMULF32 [SOURCE] WITH [SOURCE]
	0000+85		- XCHSMUL64 [SOURCE] WITH [SOURCE]
	0000+86		- XCHSMUL32 [SOURCE] WITH [SOURCE]
	0000+87		- XCHSMUL16 [SOURCE] WITH [SOURCE]
	0000+88		- XCHSMUL8 [SOURCE] WITH [SOURCE]

	0000+89		- AND64 [SOURCE] AGAINST [SOURCE]
	0000+90		- AND32 [SOURCE] AGAINST [SOURCE]
	0000+91		- AND16 [SOURCE] AGAINST [SOURCE]
	0000+92		- AND8 [SOURCE] AGAINST [SOURCE]

	0000+93		- OR64 [SOURCE] AGAINST [SOURCE]
	0000+94		- OR32 [SOURCE] AGAINST [SOURCE]
	0000+95		- OR16 [SOURCE] AGAINST [SOURCE]
	0000+96		- OR8 [SOURCE] AGAINST [SOURCE]

	0000+97		- NOT64 [SOURCE] AGAINST [SOURCE]
	0000+98		- NOT32 [SOURCE] AGAINST [SOURCE]
	0000+99		- NOT16 [SOURCE] AGAINST [SOURCE]
	0000+100	- NOT8 [SOURCE] AGAINST [SOURCE]

	0000+101	- XOR64 [SOURCE] AGAINST [SOURCE]
	0000+102	- XOR32 [SOURCE] AGAINST [SOURCE]
	0000+103	- XOR16 [SOURCE] AGAINST [SOURCE]
	0000+104	- XOR8 [SOURCE] AGAINST [SOURCE]

	0000+105	- CHGSF64 [SOURCE]		; CHANGE SIGN
	0000+106	- CHGSF32 [SOURCE]		; CHANGE SIGN

	0000+107	- NEG64 [SOURCE]
	0000+108	- NEG32 [SOURCE]
	0000+109	- NEG16 [SOURCE]
	0000+110	- NEG8 [SOURCE]

	0000+111	- INCF64 [SOURCE]
	0000+112	- INCF32 [SOURCE]
	0000+113	- INC64 [SOURCE]
	0000+114	- INC32 [SOURCE]
	0000+115	- INC16 [SOURCE]
	0000+116	- INC8 [SOURCE]

	0000+117	- DECF64 [SOURCE]
	0000+118	- DECF32 [SOURCE]
	0000+119	- DEC64 [SOURCE]
	0000+120	- DEC32 [SOURCE]
	0000+121	- DEC16 [SOURCE]
	0000+122	- DEC8 [SOURCE]
	
	This editor was never too bad in terms of how it did.

	0000+123	- SHL64 [SOURCE] BY [SOURCE]
	0000+124	- SHL32 [SOURCE] BY [SOURCE]
	0000+125	- SHL16 [SOURCE] BY [SOURCE]
	0000+126	- SHL8 [SOURCE] BY [SOURCE]

	0000+127	- SHRU64 [SOURCE] BY [SOURCE]
	0000+128	- SHRU32 [SOURCE] BY [SOURCE]
	0000+129	- SHRU16 [SOURCE] BY [SOURCE]
	0000+130	- SHRU8 [SOURCE] BY [SOURCE]

	0000+131	- SHRS64 [SOURCE] BY [SOURCE]
	0000+132	- SHRS32 [SOURCE] BY [SOURCE]
	0000+133	- SHRS16 [SOURCE] BY [SOURCE]
	0000+134	- SHRS8 [SOURCE] BY [SOURCE]

	0000+135	- ROL64 [SOURCE] BY [SOURCE]
	0000+136	- ROL32 [SOURCE] BY [SOURCE]
	0000+137	- ROL16 [SOURCE] BY [SOURCE]
	0000+138	- ROL8 [SOURCE] BY [SOURCE]

	0000+139	- ROR64 [SOURCE] BY [SOURCE]
	0000+140	- ROR32 [SOURCE] BY [SOURCE]
	0000+141	- ROR16 [SOURCE] BY [SOURCE]
	0000+142	- ROR8 [SOURCE] BY [SOURCE]

	0000+143	- CNVOBJ [REG] TO VVM TYPE [IMM8]	; TAKES OBJECT TYPE AND CONVERTS TO THE NEW FORMAT SUPPORTED BY THE VVM

	0000+144	- COPYF32I32 [FREG32] TO [REG32]
	0000+145	- COPYI32F32 [REG32] TO [FREG32]
	0000+146	- COPYF64I64 [FREG64] TO [REG64]
	0000+147	- COPYI64F64 [REG64] TO [FREG64]

	0000+148	- COPYF32I64 [FREG32] TO [REG64]
	0000+149	- COPYI32F64 [REG32] TO [FREG64]
	0000+150	- COPYF64I32 [FREG64] TO [REG32]
	0000+151	- COPYI64F32 [REG64] TO [FREG32]

	0000+152	- COPYF264 FLAGS TO [SOURCE]
	0000+153	- COPY642F [SOURCE] TO FLAGS
	0000+154	- COPY RESULT64 TO [SOURCE]

	0000+155	- ALLOCS [IMM8]						; ALLOCATE SCRATCH SPACE
	0000+156	- DEALLOCS [IMM8]					; DEALLOCATE SCRATCH SPACE

	0000+157	- DEBUG								; PAUSES FOR DEBUGGER
	0000+158	- HALT								; HALTS TIMESLICE EXECUTION UNTIL NEXT SCHEDULING
	0000+159	- NOP								; USED FOR PADDING

	0000+160	- LENOBJ							; LENGTH OF OBJECT NUMBER
	0000+161	- NUMOBJA							; NUMBER OF OBJECT ASCII NAME
	0000+162	- NUMOBJU							; NUMBER OF OBJECT UNICODE NAME
	0000+163	- NUA								; NEXT UNIQUE NAME
	0000+164	- NUN								; NEXT UNIQUE NUMBER

	0000+165	- SETIPS TO [SNIPPET SOURCE] + [OFFSET SOURCE]	; EXPLICIT ADDRESS FROM [SNIPPET NUMBER]'S OFFSET 0
	0000+166	- SETIP TO [OFFSET SOURCE]			; EXPLICIT ADDRESS FROM CURRENT SNIPPET'S OFFSET 0
	0000+167	- ADJIP64 [SOURCE]					; ADJUST IP FORWARD BACKWARD BY SIGNED [SOURCE]
	0000+168	- ADJIP32 [SOURCE]					; ADJUST IP FORWARD BACKWARD BY SIGNED [SOURCE]
	0000+169	- ADJIP16 [IMM16]					; ADJUST IP FORWARD BACKWARD BY SIGNED [IMM16]
	0000+170	- ADJIP8 [IMM8]						; ADJUST IP FORWARD BACKWARD BY SIGNED [IMM8]

	0000+171	- CALLSN [SOURCE]					; CALL SNIPPET NUMBER
	0000+172	- CALLSNA [SOURCE]					; CALL SNIPPET NAME ASCII
	0000+173	- CALLSNU [SOURCE]					; CALL SNIPPET NAME UNICODE
	0000+174	- CALLDSN [SOURCE]					; CALL DYNAMIC SNIPPET NUMBER
	0000+175	- CALLDSNA [SOURCE]					; CALL DYNAMIC SNIPPET NAME ASCII
	0000+176	- CALLDSNU [SOURCE]					; CALL DYNAMIC SNIPPET NAME UNICODE
	0000+177	- CALLHN [SOURCE]					; CALL HOST NUMBER
	0000+178	- CALLHNA [SOURCE]					; CALL HOST NAME ASCII (ALL HOST FUNCTIONS ARE ONLY ASCII)

	0000+179	- PUSH64 [SOURCE]					; PUSHES 64-BIT QUANTITY ONTO STACK FROM SOURCE
	0000+180	- POP64 [SOURCE]					; POPS 64-BIT QUANTITY BACK OFF STACK INTO SOURCE
	0000+181	- PUSH32 [SOURCE]					; PUSHES 32-BIT QUANTITY ONTO STACK FROM SOURCE
	0000+182	- POP32 [SOURCE]					; POPS 32-BIT QUANTITY BACK OFF STACK INTO SOURCE
	0000+183	- STACKCPY32 [SOURCE][LENGTH][SOURCE]	; COPY STACK [SOURCE] [LENGTH IN DWORDS] TO [DESTINATION]

	0000+184	- RETURN							; EXPLICIT RETURN TO IMMEDIATE PARENT, IF AT TOP LEVEL, TERMINATES PROGRAM
	0000+185	- RETTONAM [SOURCE]					; RETURN TO SNIPPET NAME IN PARENT LINEAGE
	0000+186	- RETTONUM [SOURCE]					; RETURN TO SNIPPET NUMBER IN PARENT LINEAGE

	0000+187	- SFLAG [IMM8]						; SET FLAG BITS
	0000+188	- CFLAG [IMM8]						; CLEAR FLAG BITS
	0000+189	- TFLAG [IMM8]						; TOGGLE FLAG BITS
	0000+190	- INFLAG [SOURCE]					; COPY [SOURCE] TO FLAGS
	0000+191	- OUTFLAG [SOURCE]					; COPY FLAGS TO [SOURCE]
	0000+192	- SETC								; SET CARRY? FLAG
	0000+193	- SETO								; SET OVERFLOW? FLAG
	0000+194	- SETU								; SET UNDERFLOW? FLAG
	0000+195	- SETE								; SET EQUAL? FLAG
	0000+196	- SETZ								; SET ZERO? FLAG
	0000+197	- SETN								; SET NEGATIVE? FLAG
	0000+198	- SETP								; SET POSITIVE? FLAG
	0000+199	- SETA								; SET APP? FLAG
	0000+200	- SETAN [IMM4]						; SET APPn? FLAG
	0000+201	- CLRA [IMM4]						; CLEAR APPn? FLAG
	0000+202	- TOGA [IMM4]						; MOVE APPn? IN TO APP? FLAG

	0000+203	- LOADTHEME [SOURCE]				; ASCII NAME OF THE THEME TO LOAD
	0000+204	- RENDERSTART [SOURCE]				; SIGNAL TO THE VVM THAT RENDER UPDATES ARE BEGINNING USING [THEME]
	0000+205	- RENDERREGION [SOURCE] [SOURCE] [SOURCE]	; RENDER THE INDICATED [SCREEN], [CANVAS] AND [REGION] USING VIA HOST DEFAULT
	0000+206	- RENDERCANVAS [SOURCE]				; RENDER THE INDICATED [CANVAS] (DRAWS ALL CHILD CANVASES ONTO IT)
	0000+207	- RENDERSCREEN [SOURCE]				; RENDER THE INDICATED [SCREEN] (DRAWS ALL CHILD CANVASES ONTO IT)
	0000+208	- RENDERSTOP						; SIGNAL VVM RENDER UPDATES ARE COMPLETE

	0000+209	- APPOAPA [SOURCE] TO [SOURCE]		; APPEND OBJECT [REG] TO OBJECT [REG] AS PARENT
	0000+210	- APPOACH [SOURCE] TO [SOURCE]		; APPEND OBJECT [REG] TO OBJECT [REG] AS CHILD
	0000+211	- APPOAPR [SOURCE] TO [SOURCE]		; APPEND OBJECT [REG] TO OBJECT [REG] AS PREV
	0000+212	- APPOANE [SOURCE] TO [SOURCE]		; APPEND OBJECT [REG] TO OBJECT [REG] AS NEXT
	0000+213	- DELOFO [SOURCE] FROM [SOURCE]		; DELETE/PRUNE [REG] FROM OBJECT [REG] (STILL EXISTS AS INSTANCE OBJECT, AND POSSIBLY ON OTHER PARENTS)
	0000+214	- DESTROY [SOURCE]					; DESTROY OBJECT

	0000+215	- ISCATTER [SOURCE]					; ISCATTER (INTEGER REGISTERS TO MEMORY BLOCK)
	0000+216	- IGATHER [SOURCE]					; IGATHER (MEMORY BLOCK TO INTEGER REGISTERS)
	0000+217	- FSCATTER [SOURCE]					; FSCATTER (FLOATING POINT REGISTERS TO MEMORY BLOCK)
	0000+218	- FGATHER [SOURCE]					; FGATHER (MEMORY BLOCK TO FLOATING POINT REGISTERS)

	0000+219	- TMRADDG [INTERVAL] [SNIPPET]		; TIMER ADD GLOBAL INTERVAL [REG] USING SNIPPET [REG]
	0000+220	- TMRDELG [SOURCE]					; TIMER DELETE GLOBAL [REG]
	0000+221	- TMRENAG [SOURCE]					; TIMER ENABLE GLOBAL [REG]
	0000+222	- TMRDISG [SOURCE]					; TIMER DISABLE GLOBAL [REG]

	0000+223	- TMRADDT [INTERVAL] [SNIPPET]		; TIMER ADD THREAD INTERVAL [REG] USING SNIPPET [REG]
	0000+224	- TMRDIST [SOURCE]					; TIMER DELETE THREAD [REG]
	0000+225	- TMRENAT [SOURCE]					; TIMER ENABLE THREAD [REG]
	0000+226	- TMRDELT [SOURCE]					; TIMER DISABLE THREAD [REG]

	0000+227	- PASSIVE							; ENTER PASSIVE MODE, READ EVENTS AND RESPOND TO THEM WITHOUT CONTINUING THREAD EXECUTION
	0000+228	- ACTIVE							; LEAVE PASSIVE MODE UPON COMPLETION OF CURRENT SNIPPET, CLEAR EVENTS AND RESUME LINEAR EXECUTION

	0000+229	- SETEXS [SOURCE]					; EXCEPTION SET DEFAULT SNIPPET [REG]
	0000+230	- EXCEPS [SOURCE SNIPPET]			; EXCEPTION TRIGGER EXPLICIT SNIPPET [NUMBER]

	0000+231	- THRAP								; THREAD ADD, PAUSED, NO SNIPPET DEFINED
	0000+232	- THRAPS [SOURCE]					; THREAD ADD, PAUSED, USING SNIPPET [REG]
	0000+233	- THRAS [SOURCE]					; THREAD ADD, NOT PAUSED, USING SNIPPET [REG]
	0000+234	- THRAF [SOURCE THREAD] [IMM8 CPU]	; THREAD [REG] ASCRIBE AFFINITY [REG]
	0000+235	- THRST								; THREAD SELF TERMINATE
	0000+236	- THRSP								; THREAD SELF PAUSE
	0000+237	- THRXT [SOURCE]					; THREAD [REG] TERMINATE
	0000+238	- THRXP [SOURCE]					; THREAD [REG] PAUSE
	0000+239	- THRXR [SOURCE]					; THREAD [REG] RESUME
	0000+240	- THRXRS [SOURCE THREAD] [SNIPPET]	; THREAD [REG] RESUME USING SNIPPET [REG]
	0000+241	- THRXJ [SOURCE]					; THREAD [REG] JOIN

	0000+242	- SCREATE							; SEMAPHORE CREATE
	0000+243	- SLOCK	[SOURCE]					; SEMAPHORE LOCK
	0000+244	- SUNLOCK [SOURCE]					; SEMAPHORE UNLOCK
	0000+245	- SDELETE [SOURCE]					; SEMAPHORE DELETE
	
	0000+246	- PREDICATE [IMM16][4:REPEAT]		; USES AN EXTENDED PREDICATE FOR A HIGH COMBINATION OF EXPLICIT CONDITIONS
	0000+247	- COPYPRED [SOURCE][4:REPEAT]		; COPIES 24-BIT QUANTITY INTO PRED (PREDICATE) REGISTER, AND INDICATES A 4-BIT REPEAT COUNT
	
	0000+248	- UNUSED
	0000+249	- UNUSED
	0000+250	- UNUSED
	0000+251	- UNUSED
	0000+252	- UNUSED
	0000+253	- UNUSED
	0000+254	- UNUSED

	0000+255	- EXTENDED INSTRUCTION BYTE FOLLOWS (TO BE DEFINED / ADDED LATER)
				EXAMPLES:
					SINE
					COSINE
					TANGENT
					ARCSINE
					ARCCOSINE
					ARCTANGENT
					SQUARE ROOT
					ROUND
					ISINT
