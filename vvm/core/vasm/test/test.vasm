// Include file
(|include|[|pathname|c:\libsf\vvm\vasm\test\testout.vasm||]||)


// Macros
[|macro|[|name|user32||][|substitute|user32.dll||]||]


// Global Variables
[|u32|[|array|10||][|name|foo||][|init|1, 2, 3, 4, 5, 6||]||]
[|s8|[|name|someString||][|init|"Hi, mom!"||]||]
[|s32|[|name|gnFlag||]||]
[|u32|[|name|lnHwnd||][|min|0||][|max|50||][|init|0||]||]


[|dsnip|dll,~user32~||]
[|dll_function|SendMessage||]
[|params|[|u32|[|name|hwnd||]||][|u32|[|name|msg||]||][|u32|[|name|w||]||][|u32|[|name|l||]||]||]
[|returns|[|u32|[|name|r1||]||]||]

[|dll_function|GetClientRect
[|params|[|u32|[|name|hwnd||]||][|u32*|[|name|rc||]||]||]
[|returns|[|u32|[|name|r1||]||]||]

[|dll_function|OtherFunction
[|params|[|u32|[|name|foo||]||]||]
[|end|]


[|dsnip|bxml||]
[|prototype|[|pathname|c:\path\to\devtime\loadable.bxml||]||]
[|end|]


(|source|[|pathname|c:\path\program.bxml::test_uadd||]||)

[|line|[|number|1||][|source:18|FUNCTION test_uadd||]||]
[|snip|[|name|test_uadd||]||]

[|line|[|number|2||][|source:30|LPARAMETERS p1, p2, p3, p4, p5||]||]
[|params|[|u32|[|name|p1||]||][|u32|[|name|p2||]||][|u32|[|name|p3||]||][|u32|[|name|p4||]||][|u32|[|name|p5||]||]||]

[|line|[|number|3||][|source:14|RETURNS r1, r2||]||]
[|returns|[|u32|[|name|r1||]||][|u32|[|name|r2||]||]||]

[|line|[|number|4||][|source:18|LOCALS lnI, lnJ, k||]||]
[|locals|[|u32|[|name|lnI||]||][|u32|[|name|lnJ||]||][|u32|[|name|k||]||][|u8|[|array|20||][|name|_sendMessageParams||]||]||]

[|line|[|number|6||][|source:15|lnC = lnA + lnB||]||]
			add.s32		lnA,lnB							[|source|[|index|6||][|length|9||]||]
			move.s32	lnC,result						[|source|[|index|0||][|length|5||]||]

[|line|[|number|7||][|source:37|k = MySendMessage(lnHwnd, foo[0], foo[lnB], fa)||]||]
			ready		_mySendMessageParams			[|source|-1||]
			set.32		&k								[|source|0,3||]
			set.32		lnHwnd							[|source|16,6||]
			set.32		foo[0]							[|source|24,6||]
			set.32		foo[lnB]						[|source|32,8||]
			set.32		fa								[|source|42,2||]
			go.dsn		SendMessage						[|source|4,11||]

[|line|[|number|8||][|source:6|RETURN||]||]
			go.back										[|source|0,6||]
[|end|]




//////////
//
// /libsf/vvm/vasm/test/test.vasm
//
//////
// Version 0.70
// Copyright (c) 2012, 2014 by Rick C. Hodgin
//////
// Last update:
//     Feb.25.2014
//////
// Change log:
//     Feb.25.2014 - Development on 0.70 begins
//     Dec.10.2012 - Continued development
//     Nov.13.2012 - Initial creation
//////
// Test VVM Assembler file, tests all functionality of the assembler.
// See devhelp.txt.
//////
//
// This software is released as Liberty Software under a Repeat License, as governed
// by the Public Benefit License v1.0 or later (PBL).
//
// You are free to use, copy, modify and share this software.  However, it can only
// be released under the PBL version indicated, and every project must include a copy
// of the pbl.txt document for its version as is at http://www.libsf.org/licenses/.
//
// For additional information about this project, or to view the license, see:
//
//     http://www.libsf.org/
//     http://www.libsf.org/licenses/
//     http://www.visual-freepro.org
//     http://www.visual-freepro.org/blog/
//     http://www.visual-freepro.org/forum/
//     http://www.visual-freepro.org/wiki/
//     http://www.visual-freepro.org/wiki/index.php/PBL
//     http://www.visual-freepro.org/wiki/index.php/Repeat_License
//
// Thank you.  And may The Lord bless you richly as you lift up your life, your
// talents, your gifts, your praise, unto Him.  In Jesus' name I pray.  Amen.
//
// @Author			Rick C. Hodgin
// @Date			Feb.25.2014
// @Version			0.70
//
// Predicates (lower-case means false, upper-case means true, or a ! prefix also means not):
//		[c]		- carry?
//		[e]		- equal?
//		[a]		- app?
//		[a3]	- app3?
//
// Examples:
//		[C A3]	- carry? and app3?
//		[e]		- not equal?
//		et cetera
//
// To repeat a predicate over the next three instructions, use:
//		[Z]:3	- zero? will be tested for the next three instructions
//
//
